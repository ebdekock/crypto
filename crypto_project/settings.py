"""
Django settings for crypto_project project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'REPLACE WITH SECRET KEY'
# SECURITY WARNING: keep the API key used in production secret!
CONVERT_CURRENCY_API_KEY = 'REPLACE WITH API KEY'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Site URL
SITE_URL = '127.0.0.1'
SITE_PORT = '8000'

ALLOWED_HOSTS = ['testserver', SITE_URL, ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'spread',
    'django_crontab',
]

CRONJOBS = [
    # Get latest currency exchange prices
    ('5 * * * *', 'spread.cron.currency_lookup'),
    # Get latest crypto exchange prices
    ('10 * * * *', 'spread.cron.price_lookup'),
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'crypto_project.urls'

TEMPLATE_DIR = os.path.join(BASE_DIR, 'template')
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR,],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crypto_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Johannesburg'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_DIR = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
STATICFILES_DIRS = [STATIC_DIR, ]

# Enable error logging for the currency and exchange cron
LOG_FILE = os.path.join(BASE_DIR, 'logs/error.log')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '[%(asctime)s] %(levelname)s %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'verbose': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s.%(funcName)s:%(lineno)d] %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
    },
    'handlers': {
        'cron': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': LOG_FILE,
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'spread.exchanges': {
            'handlers': ['cron'],
            'level': 'INFO',
            'propagate': True,
        },
        'spread.convert_currency': {
            'handlers': ['cron'],
            'level': 'INFO',
            'propagate': True,
        },
        'spread.cron': {
            'handlers': ['cron'],
            'level': 'INFO',
            'propagate': True,
        },
    },

}

# TEMPLATE CONFIG
# Google charts seems to have no timezone setting.
# Need to manually offset time from UTC.
# Accepts negative value. Default to GMT +2.
UTC_TIMEZONE_OFFSET_IN_SECONDS = 7200

# List of line and bar chart colours.
# Accepts hex ('f00', 'e2431e') or english names ('red').
# Add as many colours as you have exchanges, order of exchanges added to DB.
# If too few colours, chart will be displayed in black.
# If too many colours, chart will select as many as needed.
LINE_COLOURS = ['FF6C00', 'E98A00', 'FFBB00', 'E40068', ]
BAR_COLOURS = ['FF6C00', 'E98A00', 'FFBB00', 'E40068', ]

